import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Text, Touchable, TouchableOpacity, View } from 'react-native';

//importar os recursos da biblioteca
import * as Notifications from "expo-notifications";

//solicitar permiss√µes
Notifications.requestPermissionsAsync();

//definir como as notifica√ß√µes devem ser relatadas quando recebidas
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    //alerta de quando a notifica√ß√£o for recebida
    shouldShowAlert: true,
    //som de quando a notifica√ß√£o for recebida
    shouldPlaySound: true,
    //n√∫meros de quantas notifica√ß√µes foram recebidas
    shouldSetBadge: false,
  }),
});

export default function CancelNotification() {
  //fun√ß√£o para lidar com a chamada de notifica√ß√µes
  const handleNotifications = async () => {
    //obt√©m status das permiss√µes
    const { status } = await Notifications.getPermissionsAsync();

    //verifica se o usu√°rio concedeu permiss√£o para notifica√ß√µes
    if (status !== "granted") {
      alert("Voc√™ n√£o deixou as notifica√ß√µes ativas!");
      return;
    }
    //agendar uma notifica√ß√£o para ser exibida ap√≥s 5 segundos
    await Notifications.scheduleNotificationAsync({
      content: {
        title: "M√° not√≠cia üò•!",
        body: "A sua consulta foi cancelada!"
      },
      trigger: null
    });
  };


}